{"version":3,"sources":["components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","props","className","style","fontSize","title","ingredients","map","ingredient","text","calories","src","image","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","process","response","json","data","hits","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","recipe","index","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAoBeA,EAjBA,SAACC,GAId,OACE,sBAAKC,UAAU,aAAf,UACE,+BAAI,sBAAMC,MALI,CAChBC,SAAS,QAIH,0BAAkCH,EAAMI,MAAM,4BAClD,6BACGJ,EAAMK,YAAYC,KAAI,SAACC,GAAD,OACrB,6BAAKA,EAAWC,YAGpB,4CAAeR,EAAMS,YACrB,qBAAKC,IAAKV,EAAMW,MAAOC,IAAKZ,EAAMI,YCgEzBS,EA3EH,WAEV,IAFgB,EAKcC,mBAAS,IALvB,mBAKTC,EALS,KAKAC,EALA,OAMYF,mBAAS,IANrB,mBAMTG,EANS,KAMDC,EANC,OAOUJ,mBAAS,WAPnB,mBAOTK,EAPS,KAOFC,EAPE,KAUhBC,qBAAU,WACRC,MACC,CAACH,IAGJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAdfM,WAce,oBAbdA,qCAYG,cACXC,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAMjBZ,EAAWY,EAAKC,MANC,2CAAH,qDA4BhB,OACE,sBAAK5B,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAc6B,SAhBhB,SAACC,GACjBA,EAAMC,iBACNZ,EAASH,GACTC,EAAU,KAaR,UACE,yBACA,uBACEe,KAAK,OACLC,YAAY,wCACZjC,UAAU,aACVkC,MAAOlB,EACPmB,SA3Ba,SAACL,GACpBb,EAAUa,EAAMM,OAAOF,UA4BnB,wBAAQF,KAAK,SAAShC,UAAU,gBAAhC,6BAKF,qBAAKA,UAAU,UAAf,SACGc,EAAQT,KAAI,SAACgC,EAAQC,GAAT,OACX,cAAC,EAAD,CACEnC,MAAOkC,EAAOA,OAAOE,MACrB/B,SAAU6B,EAAOA,OAAO7B,SACxBE,MAAO2B,EAAOA,OAAO3B,MACrBN,YAAaiC,EAAOA,OAAOjC,aACtBiC,EAAOA,OAAOE,gBC3DhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.02edbbc3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Recipe.css'\r\n\r\nconst Recipe = (props) => {\r\n  const spanStyle = {\r\n    fontSize:\"20px\"\r\n  }\r\n  return (\r\n    <div className=\"cardRecipe\">\r\n      <h2><span style={spanStyle}>üçâ</span>{props.title}<span></span></h2>\r\n      <ol>\r\n        {props.ingredients.map((ingredient) => (\r\n          <li>{ingredient.text}</li>\r\n        ))}\r\n      </ol>\r\n      <p>Calories : {props.calories}</p>\r\n      <img src={props.image} alt={props.title} />\r\n    </div>\r\n  );\r\n};\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Recipe from \"./components/Recipe\";\r\n// import InputComponent from \"./components/InputComponent\";\r\n\r\nconst App = () => {\r\n  // Authenticate API --> Use Environment Tools to protect the APP_ID and APP_KEY :)\r\n  const APP_ID = process.env.REACT_APP_API_ID;\r\n  const APP_KEY = process.env.REACT_APP_API_KEY;\r\n  // ***********************State Updating**********************\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"chicken\");\r\n  // ***********************************************************\r\n  //We need useEffect() while working with API in react function component\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n  // ***********************************************************\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(\r\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n    );\r\n    const data = await response.json();\r\n    // console.log(data.hits); //hits has all the recipes\r\n    setRecipes(data.hits); // data go to reciepes\r\n  };\r\n  // ***********************EventHandler************************\r\n\r\n  const updateSearch = (event) => {\r\n    setSearch(event.target.value); //\"search\" will get this e.target.value\r\n    // console.log(search);\r\n  };\r\n  const getSearch = (event) => {\r\n    event.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n  const styles = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    // color:\"white\"\r\n  };\r\n  const spanStyle = {\r\n    fontSize: \"20px\",\r\n  };\r\n  // ***********************************************************\r\n  return (\r\n    <div className=\"App\">\r\n      <form className=\"search-form\" onSubmit={getSearch}>\r\n        <span></span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"ü•Ç Type Something Yummy... \"\r\n          className=\"search-bar\"\r\n          value={search}\r\n          onChange={updateSearch}\r\n        ></input>\r\n        <button type=\"submit\" className=\"search-button\">\r\n           üç≠\r\n        </button>\r\n      </form>\r\n      {/* List of Recipe components : */}\r\n      <div className=\"recipes\">\r\n        {recipes.map((recipe, index) => (\r\n          <Recipe\r\n            title={recipe.recipe.label}\r\n            calories={recipe.recipe.calories}\r\n            image={recipe.recipe.image}\r\n            ingredients={recipe.recipe.ingredients}\r\n            key={recipe.recipe.label}\r\n            // key should be something unique that's why I used \"label\"\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// üçì&nbsp;üç¨&nbsp;üçπ&nbsp;üç™&nbsp;\r\n// &nbsp;üç∞&nbsp;üç©&nbsp;üçÑ&nbsp;üç¶\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}